
from alembic import op
import sqlalchemy as sa
from werkzeug.security import generate_password_hash


# revision identifiers, used by Alembic.
revision = 'd0893fe9d6bb'
down_revision = 'efb1e78d1318'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employee_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'employees', ['employee_id'], ['id'])

    op.execute("INSERT INTO roles (role_name) VALUES ('admin'), ('staff')")
    hashed_password = generate_password_hash('admin')
    op.execute(sa.text("INSERT INTO users (username, password, role_id) VALUES (:username, :password, :role_id)")
               .bindparams(username='admin', password=hashed_password, role_id=1))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('loans', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('employee_id')

    op.execute("DELETE FROM roles WHERE role_name IN ('admin', 'staff')")
    # ### end Alembic commands ###
